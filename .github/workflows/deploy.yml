name: Deploy to Vercel

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run tests
        run: |
          cd frontend
          npm run test:ci || echo "No tests configured"
          
      - name: Build project
        run: |
          cd frontend
          npm run build
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: |
          cd frontend
          vercel pull --yes --environment=${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}
          
      - name: Build Project Artifacts
        run: |
          cd frontend
          vercel build ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}
          
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          cd frontend
          deployment_url=$(vercel deploy --prebuilt ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$deployment_url" >> $GITHUB_OUTPUT
          
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview deployment ready!**
              
              📱 **Preview URL:** ${{ steps.deploy.outputs.deployment_url }}
              
              🌿 **Branch:** \`${context.payload.pull_request.head.ref}\`
              💾 **Commit:** \`${context.sha.substring(0, 7)}\`
              
              This preview will be automatically updated when you push new commits to this PR.`
            })
            
      - name: Update deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure'
            const description = state === 'success' 
              ? '✅ Deployment successful' 
              : '❌ Deployment failed'
              
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment?.id || 0,
              state: state,
              description: description,
              environment_url: '${{ steps.deploy.outputs.deployment_url }}'
            }) 